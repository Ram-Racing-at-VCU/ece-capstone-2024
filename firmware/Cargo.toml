[package]
name = "firmware"
version = "0.1.0"
edition = "2021"

[[bin]]
name = "firmware"
test = false
bench = false

[dependencies]
# cortex-m assembly instructions
cortex-m = { version = "0.7.7", features = ["critical-section-single-core"] }
# cortex-m runtime
cortex-m-rt = { version = "0.7.3" }

# no_std debug printing/logging
defmt = { version = "0.3.6" }
# RTT backend for defmt
defmt-rtt = { version = "0.4.0" }
# panic handler for defmt
panic-probe = { version = "0.3.1", features = ["print-rtt"] }

# embedded api for implementing platform agnostic drivers
embedded-hal = "1.0.0"

# embedded floating point math approximations
micromath = "2.1.0"

# embassy async runtime
embassy-executor = { path = "../embassy/embassy-executor", features = [
    "defmt",
    "nightly",
    "integrated-timers",
    "arch-cortex-m",
    "executor-thread",
] }

# uses hardware timers to implement async delay and timeout functions
embassy-time = { path = "../embassy/embassy-time", features = ["defmt"] }

# hardware-abstraction-layer implementation
embassy-stm32 = { path = "../embassy/embassy-stm32", features = [
    "defmt",
    "exti",
    "time-driver-tim2",
    "stm32g431kb",
    "memory-x",
    "chrono",
    "unstable-pac",
] }

# utilities to use embedded-hal API with embassy
embassy-embedded-hal = { path = "../embassy/embassy-embedded-hal" }

# synchronization primitives with async support
embassy-sync = { path = "../embassy/embassy-sync" }
